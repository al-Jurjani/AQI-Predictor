name: Hourly Ingestion

on:
  schedule:
    - cron: "0 * * * *"  # every hour at minute 0
  workflow_dispatch:    # allow manual trigger

jobs:
  ingest:
    runs-on: ubuntu-latest
    env:
      # will be overridden by secrets, but helpful for local testing with defaults (optional)
      OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
      HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Show Python version & pwd
        run: |
          python --version
          pwd
          ls -la

    #   - name: Export secrets to env (runtime)
    #     run: |
    #       echo "OPENWEATHER_API_KEY=${{ secrets.OPENWEATHER_API_KEY }}" >> $GITHUB_ENV
    #       echo "HOPSWORKS_API_KEY=${{ secrets.HOPSWORKS_API_KEY }}" >> $GITHUB_ENV

      - name: Verify secrets are set
        run: |
          if [ -z "$OPENWEATHER_API_KEY" ]; then echo "OPENWEATHER_API_KEY is not set"; exit 1; fi
          if [ -z "$HOPSWORKS_API_KEY" ]; then echo "HOPSWORKS_API_KEY is not set"; exit 1; fi
          echo "All secrets verified (not empty)"
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
          HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}

      - name: Run fetch_data to pull latest JSON
        # adjust path if your fetch script lives elsewhere
        # env:
        #   OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        run: |
          set -e
          echo "Running fetch_data.py..."
          python fetch_data/fetch_raw_data.py
        # if your script requires any env var names other than above, ensure they are set

      - name: Commit new JSON data
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add raw_data/*.json
          git commit -m "Add new JSON data [skip ci]" || echo "No changes to commit"
          git push

      - name: Run parser + feature pipeline + upload
        # env:
        #   HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        run: |
          set -e
          echo "Running hopsworks_fs.py..."
          python features/hopsworks_fs.py

      - name: Commit archived files
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add raw_data/archive/*.json
          git commit -m "Archive processed JSONs [skip ci]" || echo "No changes to commit"
          git push

      - name: List data dir (debug)
        if: failure() || always()
        run: |
          echo "Contents of raw_data/ and backfilled_data/ (for debugging)"
          ls -la raw_data || true
          ls -la backfilled_data || true
